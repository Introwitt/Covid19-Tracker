{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/LineGraph.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral';\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nconst buildChartData = (data, casesType) => {\n  const chartData = [];\n  let lastDataPoint;\n\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      const newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n\n    lastDataPoint = data[casesType][date];\n  }\n\n  return chartData;\n};\n\nfunction LineGraph({\n  casesType\n}) {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(response => {\n        return response.json();\n      }).then(data => {\n        const chartData = buildChartData(data, casesType);\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, data && data.length > 0 && /*#__PURE__*/React.createElement(Line, {\n    options: options,\n    data: {\n      datasets: [{\n        backgroundColor: 'rgba(204, 16, 52, 0.5)',\n        borderColor: '##C1034',\n        data: data\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","setData","fetchData","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport numeral from 'numeral';\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n};\n\nconst buildChartData = (data, casesType) =>{\n    const chartData = [];\n    let lastDataPoint;\n    for(let date in data.cases){\n        if(lastDataPoint){\n            const newDataPoint = {\n                x:date,\n                y: data[casesType][date] - lastDataPoint\n            }\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n}\n\nfunction LineGraph({casesType}) {\n    const [data, setData] = useState({});\n\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n                .then((response) =>{ return response.json()})\n                .then(data =>{\n                    const chartData = buildChartData(data, casesType);\n                    setData(chartData);\n                });\n        };\n\n        fetchData();\n        \n    }, [casesType])\n\n    \n    return (\n        <div>\n            {data && data.length > 0 && (\n                <Line\n                options = {options}\n                data={{\n                    datasets: [{\n                        backgroundColor: 'rgba(204, 16, 52, 0.5)',\n                        borderColor: '##C1034',\n                        data: data\n                    }]\n                }}\n            \n             />\n            \n            )}\n            \n        </div>\n    )\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}