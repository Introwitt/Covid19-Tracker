{"ast":null,"code":"import _regeneratorRuntime from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Card,CardContent,FormControl,MenuItem,Select}from'@material-ui/core';import InfoBox from'./InfoBox';import Map from'./Map';import Table from'./Table';import'./App.css';import'./Table.css';import{sortData,prettyPrintStat}from'./util';import LineGraph from'./LineGraph';import'leaflet/dist/leaflet.css';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(['worldwide']),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState('cases'),_useState10=_slicedToArray(_useState9,2),casesType=_useState10[0],setCasesType=_useState10[1];var _useState11=useState({lat:34.80746,lng:-40.4796}),_useState12=_slicedToArray(_useState11,2),mapCenter=_useState12[0],setMapCenter=_useState12[1];var _useState13=useState(3),_useState14=_slicedToArray(_useState13,2),mapZoom=_useState14[0],setMapZoom=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),mapCountries=_useState16[0],setMapCountries=_useState16[1];useEffect(function(){fetch('https://disease.sh/v3/covid-19/all').then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://disease.sh/v3/covid-19/countries').then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setCountries(countries);setMapCountries(data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__header\"},/*#__PURE__*/React.createElement(\"h1\",null,\" COVID19 TRACKER \"),/*#__PURE__*/React.createElement(FormControl,{className:\"app__dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",onChange:onCountryChange,value:country},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app__stats\"},/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType==='cases',onClick:function onClick(e){return setCasesType('cases');},title:\"Coronavirus Cases\",cases:prettyPrintStat(countryInfo.todayCases),total:prettyPrintStat(countryInfo.cases)}),/*#__PURE__*/React.createElement(InfoBox,{active:casesType==='recovered',onClick:function onClick(e){return setCasesType('recovered');},title:\"Recoveries\",cases:prettyPrintStat(countryInfo.todayRecovered),total:prettyPrintStat(countryInfo.recovered)}),/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType==='deaths',onClick:function onClick(e){return setCasesType('deaths');},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:prettyPrintStat(countryInfo.deaths)})),/*#__PURE__*/React.createElement(Map,{countries:mapCountries,casesType:casesType,center:mapCenter,zoom:mapZoom})),/*#__PURE__*/React.createElement(Card,{className:\"app__right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"div\",{className:\"app__information\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Live Cases by Country\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",null,\"Worldwide new \",casesType),/*#__PURE__*/React.createElement(LineGraph,{casesType:casesType})))));}export default App;","map":{"version":3,"sources":["/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/App.js"],"names":["React","useState","useEffect","Card","CardContent","FormControl","MenuItem","Select","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","casesType","setCasesType","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"ghBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,IAAR,CAAcC,WAAd,CAA2BC,WAA3B,CAAwCC,QAAxC,CAAkDC,MAAlD,KAA+D,mBAA/D,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,CACA,MAAO,aAAP,CACA,OAASC,QAAT,CAAmBC,eAAnB,KAA0C,QAA1C,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAO,0BAAP,CAEA,QAASC,CAAAA,GAAT,EAAe,eAEqBb,QAAQ,CAAC,EAAD,CAF7B,wCAENc,SAFM,eAEKC,YAFL,8BAGiBf,QAAQ,CAAC,CAAC,WAAD,CAAD,CAHzB,yCAGNgB,OAHM,eAGGC,UAHH,8BAIyBjB,QAAQ,CAAC,EAAD,CAJjC,yCAINkB,WAJM,eAIOC,cAJP,8BAKqBnB,QAAQ,CAAC,EAAD,CAL7B,yCAKNoB,SALM,eAKKC,YALL,8BAMqBrB,QAAQ,CAAC,OAAD,CAN7B,0CAMNsB,SANM,gBAMKC,YANL,gCAQbvB,QAAQ,CAAC,CAAEwB,GAAG,CAAE,QAAP,CAAiBC,GAAG,CAAE,CAAC,OAAvB,CAAD,CARK,2CAONC,SAPM,gBAOKC,YAPL,gCASiB3B,QAAQ,CAAC,CAAD,CATzB,2CASN4B,OATM,gBASGC,UATH,gCAU2B7B,QAAQ,CAAC,EAAD,CAVnC,2CAUN8B,YAVM,gBAUQC,eAVR,gBAYb9B,SAAS,CAAC,UAAK,CACb+B,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACM,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADN,EAECF,IAFD,CAEM,SAACG,IAAD,CAAU,CACdjB,cAAc,CAACiB,IAAD,CAAd,CACD,CAJD,EAKD,CANQ,CAMN,EANM,CAAT,CAQAnC,SAAS,CAAC,UAAI,CAEZ,GAAMoC,CAAAA,gBAAgB,0FAAG,yJACjBL,CAAAA,KAAK,CAAC,0CAAD,CAAL,CACLC,IADK,CACA,SAACC,QAAD,QAAaA,CAAAA,QAAQ,CAACC,IAAT,EAAb,EADA,EAELF,IAFK,CAEA,SAACG,IAAD,CAAS,CACb,GAAMtB,CAAAA,SAAS,CAAGsB,IAAI,CAACE,GAAL,CAAS,SAACtB,OAAD,QACzB,CACEuB,IAAI,CAAEvB,OAAO,CAACA,OADhB,CAEEwB,KAAK,CAAExB,OAAO,CAACE,WAAR,CAAoBuB,IAF7B,CADyB,EAAT,CAAlB,CAMA,GAAMC,CAAAA,UAAU,CAAGhC,QAAQ,CAAC0B,IAAD,CAA3B,CACAf,YAAY,CAACqB,UAAD,CAAZ,CACA3B,YAAY,CAACD,SAAD,CAAZ,CACAiB,eAAe,CAACK,IAAD,CAAf,CACD,CAbK,CADiB,uDAAH,kBAAhBC,CAAAA,gBAAgB,0CAAtB,CAgBAA,gBAAgB,GACjB,CAnBQ,CAmBN,EAnBM,CAAT,CAqBA,GAAMM,CAAAA,eAAe,2FAAG,kBAAMC,KAAN,0IAEhBC,WAFgB,CAEFD,KAAK,CAACE,MAAN,CAAaN,KAFX,CAGtBvB,UAAU,CAAC4B,WAAD,CAAV,CACME,GAJgB,CAIVF,WAAW,GAAK,WAAhB,CAA8B,oCAA9B,oDAAiHA,WAAjH,CAJU,wBAMhBb,CAAAA,KAAK,CAACe,GAAD,CAAL,CACLd,IADK,CACA,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADR,EAELF,IAFK,CAEA,SAAAG,IAAI,CAAI,CACZnB,UAAU,CAAC4B,WAAD,CAAV,CACA1B,cAAc,CAACiB,IAAD,CAAd,CAEAT,YAAY,CAAC,CAACS,IAAI,CAAClB,WAAL,CAAiBM,GAAlB,CAAuBY,IAAI,CAAClB,WAAL,CAAiB8B,IAAxC,CAAD,CAAZ,CACAnB,UAAU,CAAC,CAAD,CAAV,CACD,CARK,CANgB,yDAAH,kBAAfc,CAAAA,eAAe,6CAArB,CAkBA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACI,2BAAK,SAAS,CAAC,aAAf,eACE,kDADF,cAEE,oBAAC,WAAD,EAAa,SAAS,CAAC,eAAvB,eACE,oBAAC,MAAD,EACA,OAAO,CAAG,UADV,CAEA,QAAQ,CAAIA,eAFZ,CAGA,KAAK,CAAI3B,OAHT,eAKE,oBAAC,QAAD,EAAU,KAAK,CAAE,WAAjB,cALF,CAOIF,SAAS,CAACwB,GAAV,CAAc,SAACtB,OAAD,qBACZ,oBAAC,QAAD,EAAU,KAAK,CAAGA,OAAO,CAACwB,KAA1B,EAAkCxB,OAAO,CAACuB,IAA1C,CADY,EAAd,CAPJ,CADF,CAFF,CADJ,cAoBE,2BAAK,SAAS,CAAG,YAAjB,eACE,oBAAC,OAAD,EACE,KAAK,KADP,CAEE,MAAM,CAAIjB,SAAS,GAAK,OAF1B,CAGE,OAAO,CAAI,iBAAC2B,CAAD,QAAO1B,CAAAA,YAAY,CAAC,OAAD,CAAnB,EAHb,CAIE,KAAK,CAAG,mBAJV,CAKE,KAAK,CAAEZ,eAAe,CAACO,WAAW,CAACgC,UAAb,CALxB,CAME,KAAK,CAAGvC,eAAe,CAACO,WAAW,CAACiC,KAAb,CANzB,EADF,cAUE,oBAAC,OAAD,EACE,MAAM,CAAI7B,SAAS,GAAK,WAD1B,CAEE,OAAO,CAAI,iBAAC2B,CAAD,QAAO1B,CAAAA,YAAY,CAAC,WAAD,CAAnB,EAFb,CAEmD,KAAK,CAAG,YAF3D,CAGE,KAAK,CAAIZ,eAAe,CAACO,WAAW,CAACkC,cAAb,CAH1B,CAGwD,KAAK,CAAGzC,eAAe,CAACO,WAAW,CAACmC,SAAb,CAH/E,EAVF,cAgBE,oBAAC,OAAD,EACE,KAAK,KADP,CAEE,MAAM,CAAI/B,SAAS,GAAK,QAF1B,CAGE,OAAO,CAAI,iBAAC2B,CAAD,QAAO1B,CAAAA,YAAY,CAAC,QAAD,CAAnB,EAHb,CAIE,KAAK,CAAG,QAJV,CAKE,KAAK,CAAIZ,eAAe,CAACO,WAAW,CAACoC,WAAb,CAL1B,CAKqD,KAAK,CAAG3C,eAAe,CAACO,WAAW,CAACqC,MAAb,CAL5E,EAhBF,CApBF,cA8CE,oBAAC,GAAD,EACE,SAAS,CAAIzB,YADf,CAEE,SAAS,CAAIR,SAFf,CAGE,MAAM,CAAII,SAHZ,CAIE,IAAI,CAAIE,OAJV,EA9CF,CADF,cAuDE,oBAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,eACE,oBAAC,WAAD,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,sDADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAER,SAAlB,EAFF,cAGE,+CAAmBE,SAAnB,CAHF,cAIE,oBAAC,SAAD,EAAW,SAAS,CAAEA,SAAtB,EAJF,CADF,CADF,CAvDF,CADF,CAqED,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Card, CardContent, FormControl, MenuItem, Select} from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport './App.css';\nimport './Table.css'\nimport { sortData, prettyPrintStat } from './util';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(['worldwide']);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n  const [mapCenter, setMapCenter] = \n  useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() =>{\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then((response) => response.json())\n    .then((data) => {\n      setCountryInfo(data);\n    })\n  }, [])\n\n  useEffect(()=>{\n\n    const getCountriesData = async()=>{\n      await fetch('https://disease.sh/v3/covid-19/countries')\n      .then((response)=> response.json())\n      .then((data)=> {\n        const countries = data.map((country) => (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }\n        ))\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n        setMapCountries(data);\n      })\n    }\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async(event) => {\n  \n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long])\n      setMapZoom(4);\n    })\n\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n          <div className='app__header'>\n            <h1> COVID19 TRACKER </h1>\n            <FormControl className=\"app__dropdown\">\n              <Select\n              variant = \"outlined\"\n              onChange = {onCountryChange}\n              value = {country}\n              >\n                <MenuItem value =\"worldwide\">Worldwide</MenuItem>\n                {\n                  countries.map((country) => (\n                    <MenuItem value ={country.value}>{country.name}</MenuItem>\n                  ))\n                }\n              \n              </Select>\n            </FormControl>\n          </div>\n      \n        <div className = \"app__stats\">\n          <InfoBox\n            isRed\n            active = {casesType === 'cases'}\n            onClick = {(e) => setCasesType('cases')} \n            title = 'Coronavirus Cases'\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total ={prettyPrintStat(countryInfo.cases)}\n         />\n\n          <InfoBox \n            active = {casesType === 'recovered'}\n            onClick = {(e) => setCasesType('recovered')}     title = 'Recoveries' \n            cases = {prettyPrintStat(countryInfo.todayRecovered)} total ={prettyPrintStat(countryInfo.recovered)} \n          />\n\n          <InfoBox\n            isRed\n            active = {casesType === 'deaths'}\n            onClick = {(e) => setCasesType('deaths')}       \n            title = 'Deaths'\n            cases = {prettyPrintStat(countryInfo.todayDeaths)} total ={prettyPrintStat(countryInfo.deaths)} \n          />\n        \n        </div>\n\n        <Map\n          countries = {mapCountries}\n          casesType = {casesType}\n          center = {mapCenter}\n          zoom = {mapZoom}\n         />\n      </div>\n          \n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}