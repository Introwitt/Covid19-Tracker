{"ast":null,"code":"import _toConsumableArray from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import numeral from'numeral';import{Circle,Popup}from'react-leaflet';var casesTypeColors={cases:{hex:\"#CC1034\",rgb:\"rgb(204, 16, 52)\",half_op:\"rgba(204, 16, 52, 0.5)\",multiplier:800},recovered:{hex:\"#7dd71d\",rgb:\"rgb(125, 215, 29)\",half_op:\"rgba(125, 215, 29, 0.5)\",multiplier:1200},deaths:{hex:\"#fb4443\",rgb:\"rgb(251, 68, 67)\",half_op:\"rgba(251, 68, 67, 0.5)\",multiplier:2000}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});return sortedData;};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};// Draw circles on the map with interactive tooltip\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country){return/*#__PURE__*/React.createElement(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-cases\"},\"Cases: \",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered: \",numeral(country.recovered).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Deaths: \",numeral(country.deaths).format(\"0,0\")))));});};","map":{"version":3,"sources":["/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAAQC,MAAR,CAAgBC,KAAhB,KAA4B,eAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,GAAG,CAAE,kBAFA,CAGLC,OAAO,CAAE,wBAHJ,CAILC,UAAU,CAAE,GAJP,CADa,CAOpBC,SAAS,CAAE,CACTJ,GAAG,CAAE,SADI,CAETC,GAAG,CAAE,mBAFI,CAGTC,OAAO,CAAE,yBAHA,CAITC,UAAU,CAAE,IAJH,CAPS,CAapBE,MAAM,CAAE,CACNL,GAAG,CAAE,SADC,CAENC,GAAG,CAAE,kBAFC,CAGNC,OAAO,CAAE,wBAHH,CAINC,UAAU,CAAE,IAJN,CAbY,CAAxB,CAuBA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CAEAC,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAGC,CAAH,QAASD,CAAAA,CAAC,CAACX,KAAF,CAAQY,CAAC,CAACZ,KAAV,CAAiB,CAAC,CAAlB,CAAsB,CAA/B,EAAhB,EACA,MAAOS,CAAAA,UAAP,CAEH,CANM,CAQP,MAAO,IAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC7BA,CAAAA,IAAI,YAAOlB,OAAO,CAACkB,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADf,EAAxB,CAGP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,IAAD,KAAOS,CAAAA,SAAP,2DAAmB,OAAnB,OACzBT,CAAAA,IAAI,CAACU,GAAL,CAAS,SAAAC,OAAO,qBACZ,oBAAC,MAAD,EACE,MAAM,CAAI,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ,CAEE,WAAW,CAAI,GAFjB,CAGE,KAAK,CAAIvB,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAHtC,CAIE,SAAS,CAAIF,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAJ1C,CAKE,MAAM,CACJsB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgClB,eAAe,CAACkB,SAAD,CAAf,CAA2Bb,UAN/D,eASA,oBAAC,KAAD,mBACE,2BAAK,SAAS,CAAG,gBAAjB,eACA,2BACA,SAAS,CAAG,WADZ,CAEA,KAAK,CAAE,CAAEqB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFP,EADA,cAIA,2BAAK,SAAS,CAAC,WAAf,EAA4BP,OAAO,CAACA,OAApC,CAJA,cAKA,2BAAK,SAAS,CAAC,YAAf,YAAoCvB,OAAO,CAACuB,OAAO,CAACnB,KAAT,CAAP,CAAuBe,MAAvB,CAA8B,KAA9B,CAApC,CALA,cAMA,2BAAK,SAAS,CAAC,gBAAf,gBAA4CnB,OAAO,CAACuB,OAAO,CAACd,SAAT,CAAP,CAA2BU,MAA3B,CAAkC,KAAlC,CAA5C,CANA,cAOA,2BAAK,SAAS,CAAC,aAAf,aAAsCnB,OAAO,CAACuB,OAAO,CAACb,MAAT,CAAP,CAAwBS,MAAxB,CAA+B,KAA/B,CAAtC,CAPA,CADF,CATA,CADY,EAAhB,CADyB,EAAtB","sourcesContent":["import React from 'react';\nimport numeral from 'numeral';\nimport {Circle, Popup} from 'react-leaflet';\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n      rgb: \"rgb(204, 16, 52)\",\n      half_op: \"rgba(204, 16, 52, 0.5)\",\n      multiplier: 800,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      rgb: \"rgb(125, 215, 29)\",\n      half_op: \"rgba(125, 215, 29, 0.5)\",\n      multiplier: 1200,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n      rgb: \"rgb(251, 68, 67)\",\n      half_op: \"rgba(251, 68, 67, 0.5)\",\n      multiplier: 2000,\n    },\n  };\n  \n\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n    \n    sortedData.sort((a,b)=> (a.cases>b.cases ?-1 : 1));\n    return sortedData;\n\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n// Draw circles on the map with interactive tooltip\nexport const showDataOnMap = (data, casesType = 'cases') => (\n    data.map(country => (\n        <Circle\n          center = {[country.countryInfo.lat, country.countryInfo.long]}\n          fillOpacity = {0.4}\n          color = {casesTypeColors[casesType].hex}\n          fillColor = {casesTypeColors[casesType].hex}\n          radius = {\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n          }\n        >\n        <Popup>\n          <div className = \"info-container\">\n          <div\n          className = \"info-flag\"\n          style={{ backgroundImage: `url(${country.countryInfo.flag})` }} />\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-cases\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n          <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n          <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n          </div>\n        </Popup>\n\n        </Circle>\n\n    ))\n) \n\n"]},"metadata":{},"sourceType":"module"}