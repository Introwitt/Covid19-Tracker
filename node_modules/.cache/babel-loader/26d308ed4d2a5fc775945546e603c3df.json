{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport './App.css';\nimport './Table.css';\nimport { sortData } from './util';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(['worldwide']);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all').then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries').then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \" COVID-19 TRACKER \"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recoveries\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    countries: mapCountries,\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Live Cases By Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Worldwide New Cases\"), /*#__PURE__*/React.createElement(LineGraph, {\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/App.js"],"names":["React","useState","useEffect","Card","CardContent","FormControl","MenuItem","Select","InfoBox","Map","Table","sortData","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Card, CardContent, FormControl, MenuItem, Select} from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport './App.css';\nimport './Table.css'\nimport { sortData } from './util';\nimport LineGraph from './LineGraph';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(['worldwide']);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n  const [mapCenter, setMapCenter] = \n  useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() =>{\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then((response) => response.json())\n    .then((data) => {\n      setCountryInfo(data);\n    })\n  }, [])\n\n  useEffect(()=>{\n\n    const getCountriesData = async()=>{\n      await fetch('https://disease.sh/v3/covid-19/countries')\n      .then((response)=> response.json())\n      .then((data)=> {\n        const countries = data.map((country) => (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }\n        ))\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      })\n    }\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async(event) => {\n  \n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long])\n      setMapZoom(4);\n    })\n\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n          <div className='app__header'>\n            <h1> COVID-19 TRACKER </h1>\n            <FormControl className=\"app__dropdown\">\n              <Select\n              variant = \"outlined\"\n              onChange = {onCountryChange}\n              value = {country}\n              >\n                <MenuItem value =\"worldwide\">Worldwide</MenuItem>\n                {\n                  countries.map((country) => (\n                    <MenuItem value ={country.value}>{country.name}</MenuItem>\n                  ))\n                }\n              \n              </Select>\n            </FormControl>\n          </div>\n      \n        <div className = \"app__stats\">\n          <InfoBox title = 'Coronavirus Cases' cases = {countryInfo.todayCases} total ={countryInfo.cases} />\n          <InfoBox title = 'Recoveries' cases = {countryInfo.todayRecovered} total ={countryInfo.recovered} />\n          <InfoBox title = 'Deaths' cases = {countryInfo.todayDeaths} total ={countryInfo.deaths} />\n        </div>\n\n        <Map\n          countries = {mapCountries}\n          center = {mapCenter}\n          zoom = {mapZoom}\n         />\n      </div>\n          \n      <Card className='app__right'>\n        <CardContent>\n          <h3>Live Cases By Country</h3>\n          <Table countries = {tableData} />\n          <h3>Worldwide New Cases</h3>\n          <LineGraph casesType={casesType}/>\n\n        </CardContent>\n\n      </Card>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}