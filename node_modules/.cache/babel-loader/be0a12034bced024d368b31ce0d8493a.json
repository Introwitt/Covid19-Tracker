{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/util.js\";\nimport React from 'react';\nimport numeral from 'numeral';\nimport { Circle, Popup } from 'react-leaflet';\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    //   rgb: \"rgb(204, 16, 52)\",\n    //   half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    //   rgb: \"rgb(125, 215, 29)\",\n    //   half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    //   rgb: \"rgb(251, 68, 67)\",\n    //   half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n  return sortedData;\n}; // Draw circles on the map with interactive tooltip\n\nexport const showDataOnMap = (data, casesType = 'cases') => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }\n}, country.country), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 11\n  }\n}))));","map":{"version":3,"sources":["/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,eAA5B;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAEP;AACA;AACEC,IAAAA,UAAU,EAAE;AAJP,GADa;AAOpBC,EAAAA,SAAS,EAAE;AACTF,IAAAA,GAAG,EAAE,SADI;AAEX;AACA;AACEC,IAAAA,UAAU,EAAE;AAJH,GAPS;AAapBE,EAAAA,MAAM,EAAE;AACNH,IAAAA,GAAG,EAAE,SADC;AAER;AACA;AACEC,IAAAA,UAAU,EAAE;AAJN;AAbY,CAAxB;AAuBA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAC9B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AAEAC,EAAAA,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACT,KAAF,GAAQU,CAAC,CAACV,KAAV,GAAiB,CAAC,CAAlB,GAAsB,CAA/C;AACA,SAAOO,UAAP;AAEH,CANM,C,CAQP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KACzBN,IAAI,CAACO,GAAL,CAASC,OAAO,iBACZ,oBAAC,MAAD;AACE,EAAA,MAAM,EAAI,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ;AAEE,EAAA,WAAW,EAAI,GAFjB;AAGE,EAAA,KAAK,EAAIlB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHtC;AAIE,EAAA,SAAS,EAAIF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAJ1C;AAKE,EAAA,MAAM,EACJiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UAN/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACA,EAAA,KAAK,EAAE;AAAEkB,IAAAA,eAAe,EAAG,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD,GADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMP,OAAO,CAACA,OAAd,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CATA,CADJ,CADG","sourcesContent":["import React from 'react';\nimport numeral from 'numeral';\nimport {Circle, Popup} from 'react-leaflet';\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n    //   rgb: \"rgb(204, 16, 52)\",\n    //   half_op: \"rgba(204, 16, 52, 0.5)\",\n      multiplier: 800,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n    //   rgb: \"rgb(125, 215, 29)\",\n    //   half_op: \"rgba(125, 215, 29, 0.5)\",\n      multiplier: 1200,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n    //   rgb: \"rgb(251, 68, 67)\",\n    //   half_op: \"rgba(251, 68, 67, 0.5)\",\n      multiplier: 2000,\n    },\n  };\n  \n\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n    \n    sortedData.sort((a,b)=> (a.cases>b.cases ?-1 : 1));\n    return sortedData;\n\n};\n\n// Draw circles on the map with interactive tooltip\nexport const showDataOnMap = (data, casesType = 'cases') => (\n    data.map(country => (\n        <Circle\n          center = {[country.countryInfo.lat, country.countryInfo.long]}\n          fillOpacity = {0.4}\n          color = {casesTypeColors[casesType].hex}\n          fillColor = {casesTypeColors[casesType].hex}\n          radius = {\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n          }\n        >\n        <Popup>\n          <div\n          style={{ backgroundImage: `url(${country.countryInfo.flag})` }}>\n          </div>\n\n          <div>{country.country}</div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </Popup>\n\n        </Circle>\n\n    ))\n) \n\n"]},"metadata":{},"sourceType":"module"}