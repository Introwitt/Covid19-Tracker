{"ast":null,"code":"import _regeneratorRuntime from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import{Line}from'react-chartjs-2';import numeral from'numeral';var options={legend:{display:false},elements:{point:{radius:0}},maintainAspectRatio:false,tooltips:{mode:\"index\",intersect:false,callbacks:{label:function label(tooltipItem,data){return numeral(tooltipItem.value).format(\"+0,0\");}}},scales:{xAxes:[{type:\"time\",time:{format:\"MM/DD/YY\",tooltipFormat:\"ll\"}}],yAxes:[{gridLines:{display:false},ticks:{// Include a dollar sign in the ticks\ncallback:function callback(value,index,values){return numeral(value).format(\"0a\");}}}]}};var buildChartData=function buildChartData(data,casesType){var chartData=[];var lastDataPoint;for(var date in data.cases){if(lastDataPoint){var newDataPoint={x:date,y:data[casesType][date]-lastDataPoint};chartData.push(newDataPoint);}lastDataPoint=data[casesType][date];}return chartData;};function LineGraph(_ref){var _ref$casesType=_ref.casesType,casesType=_ref$casesType===void 0?'cases':_ref$casesType,props=_objectWithoutProperties(_ref,[\"casesType\"]);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(function(response){return response.json();}).then(function(data){var chartData=buildChartData(data,casesType);setData(chartData);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[casesType]);return/*#__PURE__*/React.createElement(\"div\",{className:\"props.className\"},data&&data.length>0&&/*#__PURE__*/React.createElement(Line,{options:options,data:{datasets:[{backgroundColor:'rgba(204, 16, 52, 0.5)',borderColor:'##C1034',data:data}]}}));}export default LineGraph;","map":{"version":3,"sources":["/Users/harsh/React Projects/Covid-19Tracker/covid19tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","props","setData","fetchData","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":"qtBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,IAAR,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACZC,MAAM,CAAE,CACNC,OAAO,CAAE,KADH,CADI,CAIZC,QAAQ,CAAE,CACRC,KAAK,CAAE,CACLC,MAAM,CAAE,CADH,CADC,CAJE,CASZC,mBAAmB,CAAE,KATT,CAUZC,QAAQ,CAAE,CACRC,IAAI,CAAE,OADE,CAERC,SAAS,CAAE,KAFH,CAGRC,SAAS,CAAE,CACTC,KAAK,CAAE,eAAUC,WAAV,CAAuBC,IAAvB,CAA6B,CAClC,MAAOd,CAAAA,OAAO,CAACa,WAAW,CAACE,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP,CACD,CAHQ,CAHH,CAVE,CAmBZC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,IAAI,CAAE,MADR,CAEEC,IAAI,CAAE,CACJJ,MAAM,CAAE,UADJ,CAEJK,aAAa,CAAE,IAFX,CAFR,CADK,CADD,CAUNC,KAAK,CAAE,CACL,CACEC,SAAS,CAAE,CACTpB,OAAO,CAAE,KADA,CADb,CAIEqB,KAAK,CAAE,CACL;AACAC,QAAQ,CAAE,kBAAUV,KAAV,CAAiBW,KAAjB,CAAwBC,MAAxB,CAAgC,CACxC,MAAO3B,CAAAA,OAAO,CAACe,KAAD,CAAP,CAAeC,MAAf,CAAsB,IAAtB,CAAP,CACD,CAJI,CAJT,CADK,CAVD,CAnBI,CAAhB,CA6CA,GAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACd,IAAD,CAAOe,SAAP,CAAoB,CACvC,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAIC,CAAAA,aAAJ,CACA,IAAI,GAAIC,CAAAA,IAAR,GAAgBlB,CAAAA,IAAI,CAACmB,KAArB,CAA2B,CACvB,GAAGF,aAAH,CAAiB,CACb,GAAMG,CAAAA,YAAY,CAAG,CACjBC,CAAC,CAACH,IADe,CAEjBI,CAAC,CAAEtB,IAAI,CAACe,SAAD,CAAJ,CAAgBG,IAAhB,EAAwBD,aAFV,CAArB,CAIAD,SAAS,CAACO,IAAV,CAAeH,YAAf,EACH,CACDH,aAAa,CAAGjB,IAAI,CAACe,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB,CACH,CAED,MAAOF,CAAAA,SAAP,CACH,CAfD,CAiBA,QAASQ,CAAAA,SAAT,MAAmD,yBAA/BT,SAA+B,CAA/BA,SAA+B,yBAArB,OAAqB,gBAARU,KAAQ,4DACvB1C,QAAQ,CAAC,EAAD,CADe,wCACxCiB,IADwC,eAClC0B,OADkC,eAI/C1C,SAAS,CAAC,UAAM,CACZ,GAAM2C,CAAAA,SAAS,2FAAG,yJACRC,CAAAA,KAAK,CAAC,4DAAD,CAAL,CACDC,IADC,CACI,SAACC,QAAD,CAAa,CAAE,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CAAuB,CAD1C,EAEDF,IAFC,CAEI,SAAA7B,IAAI,CAAG,CACT,GAAMgB,CAAAA,SAAS,CAAGF,cAAc,CAACd,IAAD,CAAOe,SAAP,CAAhC,CACAW,OAAO,CAACV,SAAD,CAAP,CACH,CALC,CADQ,uDAAH,kBAATW,CAAAA,SAAS,2CAAf,CASAA,SAAS,GAEZ,CAZQ,CAYN,CAACZ,SAAD,CAZM,CAAT,CAeA,mBACI,2BAAK,SAAS,CAAC,iBAAf,EACKf,IAAI,EAAIA,IAAI,CAACgC,MAAL,CAAc,CAAtB,eACG,oBAAC,IAAD,EACA,OAAO,CAAI7C,OADX,CAEA,IAAI,CAAE,CACF8C,QAAQ,CAAE,CAAC,CACPC,eAAe,CAAE,wBADV,CAEPC,WAAW,CAAE,SAFN,CAGPnC,IAAI,CAAEA,IAHC,CAAD,CADR,CAFN,EAFR,CADJ,CAmBH,CAED,cAAewB,CAAAA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport numeral from 'numeral';\n\nconst options = {\n    legend: {\n      display: false,\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n          ticks: {\n            // Include a dollar sign in the ticks\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            },\n          },\n        },\n      ],\n    },\n};\n\nconst buildChartData = (data, casesType) =>{\n    const chartData = [];\n    let lastDataPoint;\n    for(let date in data.cases){\n        if(lastDataPoint){\n            const newDataPoint = {\n                x:date,\n                y: data[casesType][date] - lastDataPoint\n            }\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n}\n\nfunction LineGraph({casesType='cases' , ...props}) {\n    const [data, setData] = useState({});\n\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n                .then((response) =>{ return response.json()})\n                .then(data =>{\n                    const chartData = buildChartData(data, casesType);\n                    setData(chartData);\n                });\n        };\n\n        fetchData();\n        \n    }, [casesType])\n\n    \n    return (\n        <div className='props.className'>\n            {data && data.length > 0 && (\n                <Line\n                options = {options}\n                data={{\n                    datasets: [{\n                        backgroundColor: 'rgba(204, 16, 52, 0.5)',\n                        borderColor: '##C1034',\n                        data: data\n                    }]\n                }}\n            \n             />\n            \n            )}\n            \n        </div>\n    )\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}